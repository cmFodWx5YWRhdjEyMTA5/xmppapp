# 指定log4j2内部的日志输出级别，低于指定级别的日志将不会输出,ALL表示输出所有日志信息
# 日志级别：ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF
status = info
# 配置日志信息输出到哪里：err表示作为标准错误输出，还可以是一个文件路径或者一个URL
dest = err
# 指定配置的名称
name = Log4jPropertiesConfig
#使用“property.* ”来指定下方可能用到的属性值
property.RollingFileName = logs/log4j2test.log
property.ConsoleLogLevel = info

filter.threshold.type = ThresholdFilter
filter.threshold.level = debug

# ConsoleAppender：定义输出到命令行的日志输出器
# ThresholdFilter：临界值过滤器，过滤掉低于指定临界值的日志。当日志级别低于临界值时，日志输出会被拒绝
appender.console.type = Console
appender.console.name = Console_OUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} [%p] %c: %msg%n
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = ${ConsoleLogLevel}

# RollingFileAppender：输出到滚动文件的日志输出，它会判断文件是否满足封存文件的要求，若满足，则将文件封存并把日志写入到下一个滚动文件。
# RollingFileAppender需要TriggeringPolicy来指定触发封存的条件，还需要RolloverStrategy来告诉输出器如何封存文件
# 此处使用复合型触发策略(时间和文件大小)，具体配置参考：http://blog.csdn.net/henry115/article/details/78483457
appender.rolling.type = RollingFile
appender.rolling.name = RollingFile
appender.rolling.fileName = ${RollingFileName}
appender.rolling.filePattern = target/log/log1-%d{yy-MM-dd-HH-mm-ss}-%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} [%p] %C{1.} [%t]： %msg%n
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 12
appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=100MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 10

# 定义名字为TestController的Logger，其日志级别为debug
# Logger日志信息输出的目的地由“logger.rolling.appenderRef.rolling.ref”指定
# 当“logger.rolling.additivity”属性值为false时，则子Logger只会在自己的appender里输出
#logger.rolling.level = debug
logger.rolling.name = MainController
logger.rolling.additivity = false
logger.rolling.appenderRef.rolling.ref = Console_OUT

# 此处指定日志输出级别无效，输出级别由其引用的输出器指定
rootLogger.level = info
rootLogger.appenderRef.stdout.ref =Console_OUT